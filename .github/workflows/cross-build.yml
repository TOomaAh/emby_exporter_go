name: Build go project

on:
  push:
    branches:
      - main
      - 1.*
  pull_request:
    branches:
      - main
      - 1.*

jobs:
  cross-build-test:
    strategy:
      fail-fast: false
      matrix:
        goos: 
          - 'android'
          - 'linux'
          - 'solaris'
          - 'illumos'
          - 'dragonfly'
          - 'freebsd'
          - 'openbsd'
          - 'plan9'
          - 'windows'
          - 'darwin'
          - 'netbsd'
        go: 
          - '1.21'

        include:
        # Set the minimum Go patch version for the given Go minor
        # Usable via ${{ matrix.GO_SEMVER }}
        - go: '1.19'
          GO_SEMVER: '~1.19.0'

    runs-on: ubuntu-latest
    continue-on-error: true
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install Go
        uses: actions/setup-go@v4
        with:
          go-version: ${{ matrix.GO_SEMVER }}
          check-latest: true

      - name: Run Build
        env:
          CGO_ENABLED: 0
          GOOS: ${{ matrix.goos }}
        shell: bash
        continue-on-error: true
        working-directory: ./cmd/app
        run: |
          GOOS=$GOOS go build -trimpath -o emby_exporter-"$GOOS"-amd64 2> /dev/null
          if [ $? -ne 0 ]; then
            echo "::warning ::$GOOS Build Failed"
            exit 0
          fi
